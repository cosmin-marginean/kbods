plugins {
    id "maven-publish"
    id "signing"
    id "com.glovoapp.semantic-versioning" version "1.1.10"
    id "org.jetbrains.kotlin.jvm" version "${kotlinVersion}" apply false
    id "org.jetbrains.dokka" version "1.7.20" apply false
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'org.jetbrains.dokka'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    group = "io.resoluteworks"

    java {
        withJavadocJar()
        withSourcesJar()
    }

    javadocJar {
        dependsOn(dokkaHtml)
        archiveClassifier.set("javadoc")
        from(dokkaHtml.outputDirectory)
    }

    repositories {
        mavenCentral()
    }

    configurations.all {
        resolutionStrategy {
            force 'it.unibz.inf.ontop:ontop-rdf4j-config-sql:4.2.2'
            force 'it.unibz.inf.ontop:ontop-ontology-owlapi:4.2.2'
            force 'it.unibz.inf.ontop:ontop-system-sql-owlapi:4.2.2'
        }
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
        implementation "org.slf4j:slf4j-api:1.7.36"
        implementation "com.beust:klaxon:5.6"

        testImplementation "org.testng:testng:7.7.0"
        testImplementation "org.jetbrains.kotlin:kotlin-test:${kotlinVersion}"
        testImplementation "org.awaitility:awaitility:4.2.0"
        testImplementation "ch.qos.logback:logback-classic:1.4.5"
        testImplementation "io.github.serpro69:kotlin-faker:1.10.0"
        testImplementation 'org.testcontainers:testcontainers:1.17.6'
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "17"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "17"
    }

    test {
        useTestNG()
        testLogging {
            showStandardStreams = true
        }
    }

    dokkaHtml {
        outputDirectory.set(file("../docs/dokka/${project.name}"))
    }

    publishing {
        repositories {
            mavenLocal()
            maven {
                url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                credentials {
                    username = "${NEXUS_USERNAME}"
                    password = "${NEXUS_PASSWORD}"
                }
            }
        }
    }
}
